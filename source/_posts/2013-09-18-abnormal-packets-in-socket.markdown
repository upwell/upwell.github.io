---
layout: post
title: "abnormal packets in socket"
date: 2013-09-18 17:52
comments: true
categories: 
---

今天遇到一个奇怪的问题，从抓包中发现服务器收到客户端发来的HTTP请求后，  
会先回复一个乱七八糟的包，然后才会回正常的200 OK，自然的客户端就没办法  
正常工作了。

从代码分析，发现正常的逻辑下面，是不会出现这种情况的。

通过使用netstat观察，发现出问题的连接在建立好了以后，Recv-Q里面会有内容，  
应该是客户端发过来的数据，奇怪的是在Recv-Q里面有数据的同时，马上Send-Q里  
面也有数据了，也就是说当上层应用程序还没有调用recv或者read的时候，已经有  
数据被塞到Send-Q中了，但是按照上层应用程序处理的逻辑，只有当数据被recv了以后，  
才会开始写。

因为程序中有重用的机制，于是怀疑是不是前面的连接没有处理完，导致遗留的数据  
被写到新的连接里面。

仔细查看日志和代码后，发现了问题产生的根源。

>
- socket的fd会在被完全close之后被系统马上重用到新的连接上；
- 应用程序中，accept新连接(listen thread)和处理连接(working thread)是两个线程
- 问题在于当working thread把fd关闭以后，后面有一些清理工作还往该fd写了数据，于  
是乎在fd被关闭和写数据之间，有可能listen thread接受了一个新的连接重用了之前的那个fd，  
于是数据就会被写到这个新的连接中。


从这个问题可以学习到：

>
- 管理socket的时候，一定要注意其生命周期，尤其注意在在socket被close以后，不要再有  
额外的操作，比如继续写数据（有些情况可以），重复close。
- 当程序中存在多个线程操作同一个fd时，尤其要注意这样的问题。

